## Pulls gocore from a git repository and builds it from source.

FROM golang:1.21-alpine as builder
ARG github=core-coin/go-core
ARG tag=master

RUN \
  apk add --update bash curl jq git make gcc musl-dev                 \
  ca-certificates linux-headers g++                                && \
  echo "Cloning: $github - $tag"                                   && \
  git clone --depth 1 --branch $tag https://github.com/$github     && \
  cd go-core                                                   && \
  make gocore                                                        && \
  cp build/bin/gocore /usr/local/bin/gocore                            && \
  apk del go git make gcc musl-dev linux-headers g++                   && \
  rm -rf /go-core && rm -rf /var/cache/apk/*

FROM alpine:latest
RUN apk add --update bash curl jq
COPY --from=builder /usr/local/bin/gocore /usr/local/bin/gocore

# Generate the version.txt file.
RUN /usr/local/bin/gocore console --exec 'console.log(admin.nodeInfo.name)' --maxpeers=0 --nodiscover --dev 2>/dev/null | head -1 > /version.txt

# Inject the startup script.
COPY ./gocore.sh /gocore.sh
COPY ./mapper.jq /mapper.jq
RUN chmod +x /gocore.sh

# Inject the enode id retriever script.
RUN mkdir /hive-bin
COPY ./enode.sh /hive-bin/enode.sh
RUN chmod +x /hive-bin/enode.sh

# Add a default genesis file.
COPY ./genesis.json /genesis.json

# Export the usual networking ports to allow outside access to the node
EXPOSE 8545 8546 8547 8551 30300 30300/udp

ENTRYPOINT ["/gocore.sh"]
