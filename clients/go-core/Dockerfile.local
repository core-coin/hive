## Build gocore from source from a local directory called go-core.

FROM golang:1-alpine as builder

# Default local client path: clients/go-core/<go-core>
ARG local_path=go-core
COPY $local_path go-core

WORKDIR go-core
RUN apk add --update bash curl jq git make gcc libc-dev linux-headers g++
RUN make gocore
RUN mv ./build/bin/gocore /usr/local/bin/gocore

FROM alpine:latest
RUN apk add --update bash curl jq
COPY --from=builder /usr/local/bin/gocore /usr/local/bin/gocore

# Generate the version.txt file.
RUN /usr/local/bin/gocore console --exec 'console.log(admin.nodeInfo.name)' --maxpeers=0 --nodiscover --dev 2>/dev/null | head -1 > /version.txt

# Inject the startup script.
COPY ./gocore.sh /gocore.sh
COPY ./mapper.jq /mapper.jq
RUN chmod +x /gocore.sh

# Inject the enode id retriever script.
RUN mkdir /hive-bin
COPY ./enode.sh /hive-bin/enode.sh
RUN chmod +x /hive-bin/enode.sh

# Add a default genesis file.
COPY ./genesis.json /genesis.json

# Export the usual networking ports to allow outside access to the node
EXPOSE 8545 8546 8547 8551 30300 30300/udp

ENTRYPOINT ["/gocore.sh"]
